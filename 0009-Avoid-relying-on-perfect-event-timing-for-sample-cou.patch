From 87aa19222589565366c4f84e45b554828413347d Mon Sep 17 00:00:00 2001
From: Billy Laws <blaws05@gmail.com>
Date: Wed, 15 Mar 2023 13:04:24 +0000
Subject: [PATCH 09/12] Avoid relying on perfect event timing for sample count
 incrs

By dynamically calculating the number of played samples based on the time the calback actually ran, the sample count can be incremented more accurately.
---
 device/device_session.cpp | 8 ++++++--
 device/device_session.h   | 2 ++
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/device/device_session.cpp b/device/device_session.cpp
index 5a327a6..9e1709b 100644
--- a/device/device_session.cpp
+++ b/device/device_session.cpp
@@ -61,6 +61,7 @@ void DeviceSession::Finalize() {
 void DeviceSession::Start() {
     if (stream) {
         stream->Start();
+        last_increment_time = system.CoreTiming().GetGlobalTimeNs();
         system.CoreTiming().ScheduleLoopingEvent(std::chrono::nanoseconds::zero(), INCREMENT_TIME,
                                                  thread_event);
     }
@@ -121,8 +122,11 @@ u64 DeviceSession::GetPlayedSampleCount() const {
 }
 
 std::optional<std::chrono::nanoseconds> DeviceSession::ThreadFunc() {
-    // Add 5ms of samples at a 48K sample rate.
-    played_sample_count += 48'000 * INCREMENT_TIME / 1s;
+    // Add an appropriate number of samples for the 48K sample rate.
+    auto current_time{system.CoreTiming().GetGlobalTimeNs()};
+    played_sample_count += 48'000 * (current_time - last_increment_time) / 1s;
+    last_increment_time = current_time;
+
     if (type == Sink::StreamType::Out) {
         system.AudioCore().GetAudioManager().SetEvent(Event::Type::AudioOutManager, true);
     } else {
diff --git a/device/device_session.h b/device/device_session.h
index 75f766c..53a76f2 100644
--- a/device/device_session.h
+++ b/device/device_session.h
@@ -148,6 +148,8 @@ private:
     bool initialized{};
     /// Buffer queue
     std::vector<AudioBuffer> buffer_queue{};
+    /// Last time the played sample count was incremented
+    std::chrono::nanoseconds last_increment_time{};
 };
 
 } // namespace AudioCore
-- 
2.39.0

